package JDBC_02_Contact;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class ContactDAO {
	String url = "jdbc:oracle:thin:@localhost:1521:xe";
	String id = "KH";
	String pw = "KH";

	public Connection getConnection() throws SQLException {
		Connection con = DriverManager.getConnection(url, id, pw);
		return con;
	}

	// 신규등록
	public void insertContact(String name, String phone) throws SQLException {
		try (Connection con = this.getConnection(); Statement stmt = con.createStatement();) {
			if (contactCheck(phone) == true) {
				// 중복값 검사
				String duplicationSQL = "select * from contact where name ='" + name + "'";
				ResultSet duplication = stmt.executeQuery(duplicationSQL);
				if (duplication.next()) {
					System.out.println("중복값입니다.");
				} else {
					String sql = "insert into contact values (contact_seq.nextval,'" + name + "','" + phone + "')";
					int rs = stmt.executeUpdate(sql);
					if (rs > 0) {
						System.out.println("입력 성공");
						duplication.close();
					} else {
						System.out.println("입력 실패");
					}
				}
			} else {
				System.out.println("옳지 않은 번호입니다.");
			}
		}

	}

	public boolean contactCheck(String phone) {
		String[] numberArray = phone.split("-");
		if (!numberArray[0].equals("010") || numberArray[1].length() != 4 || numberArray[2].length() != 4) {
			return false;
		} else {
			return true;
		}
	}

	// 목록출력
	public ArrayList<ContactDTO> selectAllContactList() throws SQLException {
		ArrayList<ContactDTO> contactList = new ArrayList<ContactDTO>();
		try (Connection con = this.getConnection(); Statement stmt = con.createStatement();) {
			String selectAllSQL = "select * from contact";
			ResultSet selectAllResult = stmt.executeQuery(selectAllSQL);
			while (selectAllResult.next()) {
				int id = selectAllResult.getInt("id");
				String name = selectAllResult.getString("name");
				String phone = selectAllResult.getString("phone");
				ContactDTO contact = new ContactDTO(id, name, phone);
				contactList.add(contact);
			}
			selectAllResult.close();
			return contactList;
		}
	}

	// 항목 삭제
	public void deleteById(int deletionId) throws SQLException {
		try (Connection con = this.getConnection(); Statement stmt = con.createStatement();) {
			String deletionSQL = "delete from contact where id =" + deletionId;
			int deleteByIdResult = stmt.executeUpdate(deletionSQL);
			if (deleteByIdResult > 0) {
				System.out.println("입력 성공");
			} else {
				System.out.println("입력 실패");
			}
		}
	}

public void updateMenu(int updatedId, String updatedMenu, int updatedPrice) throws SQLException {
	Connection con = DriverManager.getConnection(url, id, pw);
	Statement stmt = con.createStatement();
	String sql = "update cafe_menu set name = '" + updatedMenu + "', price = '" + updatedPrice + "' where id ='"
			+ updatedId + "'";
	int rs = stmt.executeUpdate(sql);
	if (rs > 0) {
		System.out.println("수정성공");
		String selectedSql = "select * from cafe_menu where id =" + updatedId;
		ResultSet selectedRS = stmt.executeQuery(selectedSql);
		while (selectedRS.next()) {
			System.out.println(selectedRS.getInt("id"));
			System.out.println(selectedRS.getString("name"));
			System.out.println(selectedRS.getInt("price") + "원");
		}
	} else {
		System.out.println("수정실패");
	}
	con.close();
}
}
// 항목 수정
// 항목 검색